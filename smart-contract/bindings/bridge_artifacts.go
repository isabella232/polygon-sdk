package bindings

import (
	"encoding/hex"
	"fmt"

	"github.com/umbracle/go-web3/abi"
)

var abiBridge *abi.ABI

// BridgeAbi returns the abi of the Bridge contract
func BridgeAbi() *abi.ABI {
	return abiBridge
}

var binBridge []byte

// BridgeBin returns the bin of the Bridge contract
func BridgeBin() []byte {
	return binBridge
}

func init() {
	var err error
	abiBridge, err = abi.NewABI(abiBridgeStr)
	if err != nil {
		panic(fmt.Errorf("cannot parse Bridge abi: %v", err))
	}
	if len(binBridgeStr) != 0 {
		binBridge, err = hex.DecodeString(binBridgeStr[2:])
		if err != nil {
			panic(fmt.Errorf("cannot parse Bridge bin: %v", err))
		}
	}
}

var binBridgeStr = "0x60806040523480156200001157600080fd5b5060405162000c5e38038062000c5e833981810160405281019062000037919062000278565b6200006760405180606001604052806022815260200162000c3c60229139826200008760201b620001fa1760201c565b80600090805190602001906200007f92919062000156565b5050620004c5565b620001298282604051602401620000a0929190620002fe565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200016490620003ea565b90600052602060002090601f016020900481019282620001885760008555620001d4565b82601f10620001a357805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d3578251825591602001919060010190620001b6565b5b509050620001e39190620001e7565b5090565b5b8082111562000202576000816000905550600101620001e8565b5090565b60006200021d620002178462000362565b62000339565b9050828152602081018484840111156200023657600080fd5b62000243848285620003b4565b509392505050565b600082601f8301126200025d57600080fd5b81516200026f84826020860162000206565b91505092915050565b6000602082840312156200028b57600080fd5b600082015167ffffffffffffffff811115620002a657600080fd5b620002b4848285016200024b565b91505092915050565b6000620002ca8262000398565b620002d68185620003a3565b9350620002e8818560208601620003b4565b620002f381620004b4565b840191505092915050565b600060408201905081810360008301526200031a8185620002bd565b90508181036020830152620003308184620002bd565b90509392505050565b60006200034562000358565b905062000353828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000380576200037f62000485565b5b6200038b82620004b4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004b4565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61076780620004d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a41368621461003b578063cfae321714610057575b600080fd5b61005560048036038101906100509190610469565b610075565b005b61005f610168565b60405161006c91906104e3565b60405180910390f35b61012260405180606001604052806023815260200161070f602391396000805461009e9061063c565b80601f01602080910402602001604051908101604052809291908181526020018280546100ca9061063c565b80156101175780601f106100ec57610100808354040283529160200191610117565b820191906000526020600020905b8154815290600101906020018083116100fa57829003601f168201915b505050505083610296565b806000908051906020019061013892919061035e565b507f406dade31f7ae4b5dbc276258c28dde5ae6d5c2773c5745802c493a2360e55e060405160405180910390a150565b6060600080546101779061063c565b80601f01602080910402602001604051908101604052809291908181526020018280546101a39061063c565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b5050505050905090565b6102928282604051602401610210929190610505565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610335565b5050565b6103308383836040516024016102ae9392919061053c565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610335565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461036a9061063c565b90600052602060002090601f01602090048101928261038c57600085556103d3565b82601f106103a557805160ff19168380011785556103d3565b828001600101855582156103d3579182015b828111156103d25782518255916020019190600101906103b7565b5b5090506103e091906103e4565b5090565b5b808211156103fd5760008160009055506001016103e5565b5090565b600061041461040f846105ad565b610588565b90508281526020810184848401111561042c57600080fd5b6104378482856105fa565b509392505050565b600082601f83011261045057600080fd5b8135610460848260208601610401565b91505092915050565b60006020828403121561047b57600080fd5b600082013567ffffffffffffffff81111561049557600080fd5b6104a18482850161043f565b91505092915050565b60006104b5826105de565b6104bf81856105e9565b93506104cf818560208601610609565b6104d8816106fd565b840191505092915050565b600060208201905081810360008301526104fd81846104aa565b905092915050565b6000604082019050818103600083015261051f81856104aa565b9050818103602083015261053381846104aa565b90509392505050565b6000606082019050818103600083015261055681866104aa565b9050818103602083015261056a81856104aa565b9050818103604083015261057e81846104aa565b9050949350505050565b60006105926105a3565b905061059e828261066e565b919050565b6000604051905090565b600067ffffffffffffffff8211156105c8576105c76106ce565b5b6105d1826106fd565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b8381101561062757808201518184015260208101905061060c565b83811115610636576000848401525b50505050565b6000600282049050600182168061065457607f821691505b602082108114156106685761066761069f565b5b50919050565b610677826106fd565b810181811067ffffffffffffffff82111715610696576106956106ce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220b98fc0273762aa7ab39063423681ffd34c29ef597a18b9d9d3ef552adf553afb64736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a"

var abiBridgeStr = `[
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "greet",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]`
